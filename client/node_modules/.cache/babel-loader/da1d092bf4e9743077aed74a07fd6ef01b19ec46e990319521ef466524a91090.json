{"ast":null,"code":"var _jsxFileName = \"/Users/andrewspencer/cashew/advanced-frontend-interview/client/src/Autocomplete.tsx\",\n  _s = $RefreshSig$();\n// Autocomplete.tsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = _ref => {\n  _s();\n  let {\n    suggestions\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const handleChange = event => {\n    const value = event.target.value;\n    setInputValue(value);\n\n    // Filter the suggestions based on the input value\n    const filtered = suggestions.filter(suggestion => suggestion.toLowerCase().startsWith(value.toLowerCase()));\n    setFilteredSuggestions(filtered);\n    setShowSuggestions(true);\n  };\n  const handleSelection = value => {\n    setInputValue(value);\n    setShowSuggestions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelection(suggestion),\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Autocomplete, \"ICOXpbPKjONtd6n603eWMBluNWs=\");\n_c = Autocomplete;\nexport default Autocomplete;\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Autocomplete","_ref","_s","suggestions","inputValue","setInputValue","filteredSuggestions","setFilteredSuggestions","showSuggestions","setShowSuggestions","handleChange","event","value","target","filtered","filter","suggestion","toLowerCase","startsWith","handleSelection","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/andrewspencer/cashew/advanced-frontend-interview/client/src/Autocomplete.tsx"],"sourcesContent":["// Autocomplete.tsx\n\nimport React, { useState } from 'react';\n\ninterface AutocompleteProps {\n  suggestions: string[];\n}\n\nconst Autocomplete = ({ suggestions }: AutocompleteProps) => {\n  const [inputValue, setInputValue] = useState('');\n  const [filteredSuggestions, setFilteredSuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setInputValue(value);\n\n    // Filter the suggestions based on the input value\n    const filtered = suggestions.filter((suggestion) =>\n      suggestion.toLowerCase().startsWith(value.toLowerCase())\n    );\n    setFilteredSuggestions(filtered);\n\n    setShowSuggestions(true);\n  };\n\n  const handleSelection = (value: string) => {\n    setInputValue(value);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n      />\n\n      {showSuggestions && (\n        <ul>\n          {filteredSuggestions.map((suggestion, index) => (\n            <li key={index} onClick={() => handleSelection(suggestion)}>\n              {suggestion}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,YAAY,GAAGC,IAAA,IAAwC;EAAAC,EAAA;EAAA,IAAvC;IAAEC;EAA+B,CAAC,GAAAF,IAAA;EACtD,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAC5E,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMa,YAAY,GAAIC,KAA0C,IAAK;IACnE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCP,aAAa,CAACO,KAAK,CAAC;;IAEpB;IACA,MAAME,QAAQ,GAAGX,WAAW,CAACY,MAAM,CAAEC,UAAU,IAC7CA,UAAU,CAACC,WAAW,CAAC,CAAC,CAACC,UAAU,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACzD,CAAC;IACDV,sBAAsB,CAACO,QAAQ,CAAC;IAEhCL,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMU,eAAe,GAAIP,KAAa,IAAK;IACzCP,aAAa,CAACO,KAAK,CAAC;IACpBH,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEV,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAER,UAAW;MAClBkB,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EAEDlB,eAAe,iBACdT,OAAA;MAAAqB,QAAA,EACGd,mBAAmB,CAACqB,GAAG,CAAC,CAACX,UAAU,EAAEY,KAAK,kBACzC7B,OAAA;QAAgB8B,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAACH,UAAU,CAAE;QAAAI,QAAA,EACxDJ;MAAU,GADJY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}